// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Addressbook.pb.h"

@implementation AddressbookRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [AddressbookRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Person ()
@property (retain) NSString* name;
@property int32_t id;
@property (retain) NSString* email;
@property (retain) PBAppendableArray * phoneArray;
@end

@implementation Person

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasEmail {
  return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) value_ {
  hasEmail_ = !!value_;
}
@synthesize email;
@synthesize phoneArray;
@dynamic phone;
- (void) dealloc {
  self.name = nil;
  self.email = nil;
  self.phoneArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.id = 0;
    self.email = @"";
  }
  return self;
}
static Person* defaultPersonInstance = nil;
+ (void) initialize {
  if (self == [Person class]) {
    defaultPersonInstance = [[Person alloc] init];
  }
}
+ (Person*) defaultInstance {
  return defaultPersonInstance;
}
- (Person*) defaultInstance {
  return defaultPersonInstance;
}
- (PBArray *)phone {
  return phoneArray;
}
- (Person_PhoneNumber*)phoneAtIndex:(NSUInteger)index {
  return [phoneArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasId) {
    return NO;
  }
  for (Person_PhoneNumber* element in self.phone) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasId) {
    [output writeInt32:2 value:self.id];
  }
  if (self.hasEmail) {
    [output writeString:3 value:self.email];
  }
  for (Person_PhoneNumber *element in self.phoneArray) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasName) {
    size_ += computeStringSize(1, self.name);
  }
  if (self.hasId) {
    size_ += computeInt32Size(2, self.id);
  }
  if (self.hasEmail) {
    size_ += computeStringSize(3, self.email);
  }
  for (Person_PhoneNumber *element in self.phoneArray) {
    size_ += computeMessageSize(4, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Person*) parseFromData:(NSData*) data {
  return (Person*)[[[Person builder] mergeFromData:data] build];
}
+ (Person*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Person*)[[[Person builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Person*) parseFromInputStream:(NSInputStream*) input {
  return (Person*)[[[Person builder] mergeFromInputStream:input] build];
}
+ (Person*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Person*)[[[Person builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Person*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Person*)[[[Person builder] mergeFromCodedInputStream:input] build];
}
+ (Person*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Person*)[[[Person builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Person_Builder*) builder {
  return [[[Person_Builder alloc] init] autorelease];
}
+ (Person_Builder*) builderWithPrototype:(Person*) prototype {
  return [[Person builder] mergeFrom:prototype];
}
- (Person_Builder*) builder {
  return [Person builder];
}
- (Person_Builder*) toBuilder {
  return [Person builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasEmail) {
    [output appendFormat:@"%@%@: %@\n", indent, @"email", self.email];
  }
  for (Person_PhoneNumber* element in self.phoneArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"phone"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Person class]]) {
    return NO;
  }
  Person *otherMessage = other;
  return
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasEmail == otherMessage.hasEmail &&
      (!self.hasEmail || [self.email isEqual:otherMessage.email]) &&
      [self.phoneArray isEqualToArray:otherMessage.phoneArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasEmail) {
    hashCode = hashCode * 31 + [self.email hash];
  }
  for (Person_PhoneNumber* element in self.phoneArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL Person_PhoneTypeIsValidValue(Person_PhoneType value) {
  switch (value) {
    case Person_PhoneTypeMobile:
    case Person_PhoneTypeHome:
    case Person_PhoneTypeWork:
      return YES;
    default:
      return NO;
  }
}
@interface Person_PhoneNumber ()
@property (retain) NSString* number;
@property Person_PhoneType type;
@end

@implementation Person_PhoneNumber

- (BOOL) hasNumber {
  return !!hasNumber_;
}
- (void) setHasNumber:(BOOL) value_ {
  hasNumber_ = !!value_;
}
@synthesize number;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (void) dealloc {
  self.number = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.number = @"";
    self.type = Person_PhoneTypeHome;
  }
  return self;
}
static Person_PhoneNumber* defaultPerson_PhoneNumberInstance = nil;
+ (void) initialize {
  if (self == [Person_PhoneNumber class]) {
    defaultPerson_PhoneNumberInstance = [[Person_PhoneNumber alloc] init];
  }
}
+ (Person_PhoneNumber*) defaultInstance {
  return defaultPerson_PhoneNumberInstance;
}
- (Person_PhoneNumber*) defaultInstance {
  return defaultPerson_PhoneNumberInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNumber) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNumber) {
    [output writeString:1 value:self.number];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNumber) {
    size_ += computeStringSize(1, self.number);
  }
  if (self.hasType) {
    size_ += computeEnumSize(2, self.type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Person_PhoneNumber*) parseFromData:(NSData*) data {
  return (Person_PhoneNumber*)[[[Person_PhoneNumber builder] mergeFromData:data] build];
}
+ (Person_PhoneNumber*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Person_PhoneNumber*)[[[Person_PhoneNumber builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Person_PhoneNumber*) parseFromInputStream:(NSInputStream*) input {
  return (Person_PhoneNumber*)[[[Person_PhoneNumber builder] mergeFromInputStream:input] build];
}
+ (Person_PhoneNumber*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Person_PhoneNumber*)[[[Person_PhoneNumber builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Person_PhoneNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Person_PhoneNumber*)[[[Person_PhoneNumber builder] mergeFromCodedInputStream:input] build];
}
+ (Person_PhoneNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Person_PhoneNumber*)[[[Person_PhoneNumber builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Person_PhoneNumber_Builder*) builder {
  return [[[Person_PhoneNumber_Builder alloc] init] autorelease];
}
+ (Person_PhoneNumber_Builder*) builderWithPrototype:(Person_PhoneNumber*) prototype {
  return [[Person_PhoneNumber builder] mergeFrom:prototype];
}
- (Person_PhoneNumber_Builder*) builder {
  return [Person_PhoneNumber builder];
}
- (Person_PhoneNumber_Builder*) toBuilder {
  return [Person_PhoneNumber builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNumber) {
    [output appendFormat:@"%@%@: %@\n", indent, @"number", self.number];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"type", self.type];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Person_PhoneNumber class]]) {
    return NO;
  }
  Person_PhoneNumber *otherMessage = other;
  return
      self.hasNumber == otherMessage.hasNumber &&
      (!self.hasNumber || [self.number isEqual:otherMessage.number]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasNumber) {
    hashCode = hashCode * 31 + [self.number hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface Person_PhoneNumber_Builder()
@property (retain) Person_PhoneNumber* result;
@end

@implementation Person_PhoneNumber_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Person_PhoneNumber alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Person_PhoneNumber_Builder*) clear {
  self.result = [[[Person_PhoneNumber alloc] init] autorelease];
  return self;
}
- (Person_PhoneNumber_Builder*) clone {
  return [Person_PhoneNumber builderWithPrototype:result];
}
- (Person_PhoneNumber*) defaultInstance {
  return [Person_PhoneNumber defaultInstance];
}
- (Person_PhoneNumber*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Person_PhoneNumber*) buildPartial {
  Person_PhoneNumber* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Person_PhoneNumber_Builder*) mergeFrom:(Person_PhoneNumber*) other {
  if (other == [Person_PhoneNumber defaultInstance]) {
    return self;
  }
  if (other.hasNumber) {
    [self setNumber:other.number];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Person_PhoneNumber_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Person_PhoneNumber_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setNumber:[input readString]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (Person_PhoneTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasNumber {
  return result.hasNumber;
}
- (NSString*) number {
  return result.number;
}
- (Person_PhoneNumber_Builder*) setNumber:(NSString*) value {
  result.hasNumber = YES;
  result.number = value;
  return self;
}
- (Person_PhoneNumber_Builder*) clearNumber {
  result.hasNumber = NO;
  result.number = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (Person_PhoneType) type {
  return result.type;
}
- (Person_PhoneNumber_Builder*) setType:(Person_PhoneType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Person_PhoneNumber_Builder*) clearType {
  result.hasType = NO;
  result.type = Person_PhoneTypeHome;
  return self;
}
@end

@interface Person_Builder()
@property (retain) Person* result;
@end

@implementation Person_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Person alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Person_Builder*) clear {
  self.result = [[[Person alloc] init] autorelease];
  return self;
}
- (Person_Builder*) clone {
  return [Person builderWithPrototype:result];
}
- (Person*) defaultInstance {
  return [Person defaultInstance];
}
- (Person*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Person*) buildPartial {
  Person* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Person_Builder*) mergeFrom:(Person*) other {
  if (other == [Person defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasEmail) {
    [self setEmail:other.email];
  }
  if (other.phoneArray.count > 0) {
    if (result.phoneArray == nil) {
      result.phoneArray = [[other.phoneArray copyWithZone:[other.phoneArray zone]] autorelease];
    } else {
      [result.phoneArray appendArray:other.phoneArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Person_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Person_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 16: {
        [self setId:[input readInt32]];
        break;
      }
      case 26: {
        [self setEmail:[input readString]];
        break;
      }
      case 34: {
        Person_PhoneNumber_Builder* subBuilder = [Person_PhoneNumber builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPhone:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Person_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Person_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (Person_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Person_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasEmail {
  return result.hasEmail;
}
- (NSString*) email {
  return result.email;
}
- (Person_Builder*) setEmail:(NSString*) value {
  result.hasEmail = YES;
  result.email = value;
  return self;
}
- (Person_Builder*) clearEmail {
  result.hasEmail = NO;
  result.email = @"";
  return self;
}
- (PBAppendableArray *)phone {
  return result.phoneArray;
}
- (Person_PhoneNumber*)phoneAtIndex:(NSUInteger)index {
  return [result phoneAtIndex:index];
}
- (Person_Builder *)addPhone:(Person_PhoneNumber*)value {
  if (result.phoneArray == nil) {
    result.phoneArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.phoneArray addObject:value];
  return self;
}
- (Person_Builder *)setPhoneArray:(NSArray *)array {
  result.phoneArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (Person_Builder *)setPhoneValues:(const Person_PhoneNumber* *)values count:(NSUInteger)count {
  result.phoneArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (Person_Builder *)clearPhone {
  result.phoneArray = nil;
  return self;
}
@end

@interface AddressBook ()
@property (retain) PBAppendableArray * personArray;
@end

@implementation AddressBook

@synthesize personArray;
@dynamic person;
- (void) dealloc {
  self.personArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static AddressBook* defaultAddressBookInstance = nil;
+ (void) initialize {
  if (self == [AddressBook class]) {
    defaultAddressBookInstance = [[AddressBook alloc] init];
  }
}
+ (AddressBook*) defaultInstance {
  return defaultAddressBookInstance;
}
- (AddressBook*) defaultInstance {
  return defaultAddressBookInstance;
}
- (PBArray *)person {
  return personArray;
}
- (Person*)personAtIndex:(NSUInteger)index {
  return [personArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (Person* element in self.person) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Person *element in self.personArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (Person *element in self.personArray) {
    size_ += computeMessageSize(1, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddressBook*) parseFromData:(NSData*) data {
  return (AddressBook*)[[[AddressBook builder] mergeFromData:data] build];
}
+ (AddressBook*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddressBook*)[[[AddressBook builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AddressBook*) parseFromInputStream:(NSInputStream*) input {
  return (AddressBook*)[[[AddressBook builder] mergeFromInputStream:input] build];
}
+ (AddressBook*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddressBook*)[[[AddressBook builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddressBook*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AddressBook*)[[[AddressBook builder] mergeFromCodedInputStream:input] build];
}
+ (AddressBook*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddressBook*)[[[AddressBook builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddressBook_Builder*) builder {
  return [[[AddressBook_Builder alloc] init] autorelease];
}
+ (AddressBook_Builder*) builderWithPrototype:(AddressBook*) prototype {
  return [[AddressBook builder] mergeFrom:prototype];
}
- (AddressBook_Builder*) builder {
  return [AddressBook builder];
}
- (AddressBook_Builder*) toBuilder {
  return [AddressBook builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (Person* element in self.personArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"person"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AddressBook class]]) {
    return NO;
  }
  AddressBook *otherMessage = other;
  return
      [self.personArray isEqualToArray:otherMessage.personArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (Person* element in self.personArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AddressBook_Builder()
@property (retain) AddressBook* result;
@end

@implementation AddressBook_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AddressBook alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AddressBook_Builder*) clear {
  self.result = [[[AddressBook alloc] init] autorelease];
  return self;
}
- (AddressBook_Builder*) clone {
  return [AddressBook builderWithPrototype:result];
}
- (AddressBook*) defaultInstance {
  return [AddressBook defaultInstance];
}
- (AddressBook*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AddressBook*) buildPartial {
  AddressBook* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AddressBook_Builder*) mergeFrom:(AddressBook*) other {
  if (other == [AddressBook defaultInstance]) {
    return self;
  }
  if (other.personArray.count > 0) {
    if (result.personArray == nil) {
      result.personArray = [[other.personArray copyWithZone:[other.personArray zone]] autorelease];
    } else {
      [result.personArray appendArray:other.personArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AddressBook_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AddressBook_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Person_Builder* subBuilder = [Person builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPerson:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)person {
  return result.personArray;
}
- (Person*)personAtIndex:(NSUInteger)index {
  return [result personAtIndex:index];
}
- (AddressBook_Builder *)addPerson:(Person*)value {
  if (result.personArray == nil) {
    result.personArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.personArray addObject:value];
  return self;
}
- (AddressBook_Builder *)setPersonArray:(NSArray *)array {
  result.personArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (AddressBook_Builder *)setPersonValues:(const Person* *)values count:(NSUInteger)count {
  result.personArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (AddressBook_Builder *)clearPerson {
  result.personArray = nil;
  return self;
}
@end

